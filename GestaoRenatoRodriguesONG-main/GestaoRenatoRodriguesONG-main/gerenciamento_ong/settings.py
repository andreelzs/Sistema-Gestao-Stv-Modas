"""
Django settings for gerenciamento_ong project.

Generated by 'django-admin startproject' using Django 4.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

import os
from pathlib import Path
from dotenv import load_dotenv

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Load environment variables from .env file
load_dotenv(BASE_DIR / '.env')

# Allow synchronous operations in async context for livereload in development
os.environ["DJANGO_ALLOW_ASYNC_UNSAFE"] = "true"

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# Default secret key for development if DJANGO_SECRET_KEY is not set
DEV_SECRET_KEY = 'django-insecure-h8qm#-3#9&j%+4hi9mxo$%j)b6c%_fdfe9%lih79$a^m&o%b(l'
SECRET_KEY = os.getenv('DJANGO_SECRET_KEY', DEV_SECRET_KEY)

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

# Base ALLOWED_HOSTS for production and development
# ATENÇÃO: A LINHA ABAIXO É APENAS PARA DIAGNÓSTICO E É INSEGURA PARA PRODUÇÃO!
ALLOWED_HOSTS = ['*'] # Permite qualquer host para teste

# A lógica original de ALLOWED_HOSTS está comentada abaixo para fácil restauração:
# ALLOWED_HOSTS = [
#     'andreelzs.pythonanywhere.com', 
#     'www.andreelzs.pythonanywhere.com',
#     'ongrenatorodrigues1.pythonanywhere.com',
#     'www.ongrenatorodrigues1.pythonanywhere.com',
# ]

# if DEBUG:
#     ALLOWED_HOSTS.extend([
#         'localhost', 
#         '127.0.0.1'
#     ])
# else:
#     # Ensure SECRET_KEY is set in production
#     if SECRET_KEY == DEV_SECRET_KEY:
#         raise ValueError("DJANGO_SECRET_KEY must be set in production (when DEBUG is False)")

CSRF_TRUSTED_ORIGINS = [
    'https://andreelzs.pythonanywhere.com', 'https://www.andreelzs.pythonanywhere.com', # Manter os antigos
    'https://ongrenatorodrigues1.pythonanywhere.com', 'https://www.ongrenatorodrigues1.pythonanywhere.com'
]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # Meus apps
    'core.apps.CoreConfig',
    'contas.apps.ContasConfig',
    'voluntarios.apps.VoluntariosConfig',
    'beneficiarios.apps.BeneficiariosConfig',
    'tarefas.apps.TarefasConfig',
    'dashboard.apps.DashboardConfig',
    'cursos.apps.CursosConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'gerenciamento_ong.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'gerenciamento_ong.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'pt-br'

TIME_ZONE = 'America/Sao_Paulo'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = BASE_DIR / 'staticfiles'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Modelo de usuário personalizado
AUTH_USER_MODEL = 'contas.Usuario'

# URL de redirecionamento após login
LOGIN_REDIRECT_URL = '/'
# Opcionalmente, para onde redirecionar ao fazer logout (se não especificado na view de logout)
# LOGOUT_REDIRECT_URL = '/'
